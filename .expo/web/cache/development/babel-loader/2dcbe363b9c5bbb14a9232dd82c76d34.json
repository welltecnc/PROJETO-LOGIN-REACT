{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useReducer, useState } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { Button, CheckBox, Input, Text } from 'react-native-elements';\nimport styles from \"../style/estilo\";\nimport { TextInputMask } from 'react-native-masked-text';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Cadastro(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorEmail = _useState4[0],\n      seterrorEmail = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nome = _useState6[0],\n      setNome = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorNome = _useState8[0],\n      seterrorNome = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cpf = _useState10[0],\n      setCpf = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      errorCpf = _useState12[0],\n      seterrorCpf = _useState12[1];\n\n  var salvar = function salvar() {\n    if (validar()) {\n      setLoading(true);\n      var data = {\n        email: email,\n        nome: nome,\n        cpf: cpf\n      };\n    }\n\n    return _jsx(KeyboardAvoidingView, {\n      style: [styles.container, specificStyle.specificContainer],\n      keyboardVerticalOffset: 80,\n      children: _jsxs(ScrollView, {\n        style: {\n          width: \"100%\"\n        },\n        children: [_jsx(Text, {\n          h3: true,\n          children: \"Cadastra-se\"\n        }), _jsx(Input, {\n          placeholder: \"Email\",\n          onChangeText: function onChangeText(value) {\n            setEmail(value);\n          },\n          keyboardType: \"email-address\"\n        }), _jsx(Input, {\n          placeholder: \"Nome\",\n          onChangeText: function onChangeText(value) {\n            return setNome(value);\n          }\n        }), _jsx(View, {\n          style: styles.containerMask,\n          children: _jsx(TextInputMask, {\n            placeholder: \"CPF\",\n            type: 'cpf',\n            value: cpf,\n            onChangeText: function onChangeText(value) {\n              setCpf(value);\n            },\n            keyboardType: \"number-pad\",\n            returnKeyType: \"done\",\n            style: styles.maskedInput\n          })\n        }), _jsx(CheckBox, {\n          title: \"Aceito os termos de uso\",\n          checkedIcon: \"check\",\n          uncheckedIcon: \"square-o\",\n          checkedColor: \"green\",\n          uncheckedColor: \"red\",\n          checked: isSelected,\n          onPress: function onPress() {\n            return setSelected(!isSelected);\n          }\n        }), _jsx(Button, {\n          icon: _jsx(Icon, {\n            name: \"check\",\n            size: 15,\n            color: \"white\"\n          }),\n          title: \"Salvar\",\n          buttonStyle: specificStyle.button,\n          onPress: function onPress() {\n            return salvar();\n          }\n        })]\n      })\n    });\n  };\n\n  var specificStyle = StyleSheet.create({\n    specificContainer: {\n      backgroundColor: \"#ffff00\",\n      padding: 10\n    },\n    button: {\n      width: \"100%\",\n      margintop: 10\n    }\n  });\n}","map":{"version":3,"sources":["E:/#### PROJETOS REACT/LOGIN/aula/screen/Cadastro.js"],"names":["React","useReducer","useState","Icon","Button","CheckBox","Input","Text","styles","TextInputMask","ScrollView","Cadastro","navigation","email","setEmail","errorEmail","seterrorEmail","nome","setNome","errorNome","seterrorNome","cpf","setCpf","errorCpf","seterrorCpf","salvar","validar","setLoading","data","container","specificStyle","specificContainer","width","value","containerMask","maskedInput","isSelected","setSelected","button","StyleSheet","create","backgroundColor","padding","margintop"],"mappings":"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","sourcesContent":["import React,{useReducer, useState} from 'react';\r\nimport { Platform, StyleSheet,View } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport { Button, CheckBox, Input, Text } from 'react-native-elements';\r\nimport styles from '../style/estilo';\r\nimport {TextInputMask} from 'react-native-masked-text';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { KeyboardAvoidingView } from 'react-native';\r\n\r\n\r\nexport default function Cadastro({navigation}) {\r\n\r\n    const [email, setEmail]= useState(null)\r\n    const [errorEmail, seterrorEmail]= useState(null)\r\n    const [nome, setNome]=useState(null)\r\n    const [errorNome, seterrorNome]= useState(null)\r\n    const [cpf, setCpf]=useState(null)\r\n    const [errorCpf, seterrorCpf]= useState(null)\r\n\r\n\r\n   const salvar =()=>\r\n{\r\n    if(validar()){\r\n        setLoading(true)\r\n\r\n        let data={\r\n            email:email,\r\n            nome:nome,\r\n            cpf:cpf\r\n        }\r\n}\r\n\r\n    return (\r\n\r\n        <KeyboardAvoidingView\r\n        style={[styles.container, specificStyle.specificContainer]}\r\n        keyboardVerticalOffset={80}>\r\n        <ScrollView style={{width: \"100%\"}}>\r\n        <Text h3>Cadastra-se</Text>\r\n        <Input\r\n            placeholder=\"Email\"\r\n            onChangeText={value =>{\r\n                setEmail(value)\r\n            }}\r\n            keyboardType=\"email-address\"\r\n        />       \r\n        <Input\r\n            placeholder=\"Nome\"\r\n            onChangeText={value => setNome(value)}\r\n            />  \r\n        <View style={styles.containerMask}>\r\n            <TextInputMask\r\n                placeholder=\"CPF\"\r\n                type={'cpf'}\r\n                value={cpf}\r\n                onChangeText={value =>{\r\n                    setCpf(value)\r\n\r\n                }}\r\n                keyboardType=\"number-pad\"\r\n                returnKeyType=\"done\"\r\n                style={styles.maskedInput}\r\n                /> \r\n        </View>\r\n\r\n        <CheckBox\r\n            title=\"Aceito os termos de uso\"\r\n            checkedIcon=\"check\"\r\n            uncheckedIcon=\"square-o\"\r\n            checkedColor='green'\r\n            uncheckedColor=\"red\"\r\n            checked={isSelected}\r\n            onPress={()=> setSelected(!isSelected)}\r\n            />\r\n\r\n        \r\n            <Button\r\n                icon={\r\n                    <Icon\r\n                    name=\"check\"\r\n                    size={15}\r\n                    color=\"white\"\r\n                    />\r\n                }\r\n                title=\"Salvar\"\r\n                buttonStyle={specificStyle.button}\r\n                onPress={()=> salvar()}\r\n                />\r\n\r\n         </ScrollView>\r\n\r\n    </KeyboardAvoidingView>\r\n\r\n    );\r\n}\r\n\r\nconst specificStyle =StyleSheet.create({\r\n    specificContainer:{\r\n        backgroundColor:\"#ffff00\",\r\n        padding:10\r\n    },\r\n    button:{\r\n        width: \"100%\",\r\n        margintop:10\r\n    }\r\n})\r\n}\r\n\r\n   \r\n\r\n"]},"metadata":{},"sourceType":"module"}